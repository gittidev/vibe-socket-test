events {}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # CORS origin whitelist (add your domain here)
  # - Allows localhost and 127.0.0.1 by default.
  # - Example to allow your domain: uncomment the example.com line and edit.
  map $http_origin $cors_allow_origin {
    default "";
    ~^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$ $http_origin;
    # ~^https?://(example\.com|www\.example\.com)(:\d+)?$ $http_origin;
  }
  server {
    listen 80;

    location / {
      proxy_pass http://main-web;
    }

    # Ensure subpath prefixes are stripped when proxying
    location = /patient { return 301 /patient/; }
    location /patient/ {
      proxy_pass http://patient-web/;
    }

    location = /admin { return 301 /admin/; }
    location /admin/ {
      proxy_pass http://admin-web/;
    }

    # API proxy: normalize trailing slash and enable CORS
    location = /api { return 301 /api/; }
    location /api/ {
      # CORS headers (restrict to whitelist via $cors_allow_origin)
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
        add_header Access-Control-Allow-Headers "*" always;
        add_header Access-Control-Max-Age 86400 always;
        add_header Vary "Origin" always;
        return 204;
      }
      add_header Access-Control-Allow-Origin $cors_allow_origin always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Access-Control-Allow-Headers "*" always;
      add_header Vary "Origin" always;

      proxy_pass http://api:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
    }

    location /socket.io {
      # CORS for websockets
      add_header Access-Control-Allow-Origin $cors_allow_origin always;
      add_header Access-Control-Allow-Methods "GET,POST,OPTIONS" always;
      add_header Access-Control-Allow-Headers "*" always;
      add_header Vary "Origin" always;

      proxy_pass http://api:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
      proxy_buffering off;
    }
  }

  # Optionally include extra servers (e.g., SSL) from mounted conf.d files
  include /etc/nginx/conf.d/*.conf;
}
